// Give each tag a different color (up to 8 colors, then repeats start)
$i: 1;
<% tag_set.each_with_index do |tag, i| %>
  <% fn = ->(j) { (j > 7) ? fn.call(j - 7) : (j + 1) } %>
  $current-color: nth($rainbow-list, <%= fn.call(i) %>);
  $bg-color: $current-color;
  $border-color: darken($current-color, 0.5);
  .<%= tag %>-tag {
    background-color: $bg-color !important;
    border-color: $border-color !important;
    color: $lighterest !important;
  }
  .breadcrumb {
    .<%= tag %>-tag {
      &:first-child {
        border-left: $border-color;
      }

      &:last-child {
        background-color: $bg-color;
        color: $lighterest;
      }

      &::before {
        border-left-color: $border-color;
      }

      &::after {
        border-left-color: $bg-color;
      }
    }
  }
<% end %>


$badge-font-size: 0.75em !default;

@mixin badge() {
  color: $lighterest;
  border-radius: $badge-font-size;
  display: inline-block;
  font-family: map-get($font-stack, primary);
  font-size: $badge-font-size;
  font-weight: 500;
  line-height: 1;
  padding: 0.25rem 1rem;
  margin: 0 4px;
  @include transition-property(transform);
  // @include transition-duration(0.1s);
  // @include transition-timing-function(ease-in-out);
  // @include transition-delay(0s);

  &:hover,
  &:focus,
  &:active {
      @include transform(scale(1.1));
  }
}

.badge { @include badge(); }
