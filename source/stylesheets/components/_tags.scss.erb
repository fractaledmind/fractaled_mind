$badge-font-size: 0.75em !default;

@mixin badge() {
  color: $lighterest;
  border-radius: $badge-font-size;
  display: inline-block;
  font-family: map-get($font-stack, primary);
  font-size: $badge-font-size;
  font-weight: 500;
  line-height: 1;
  padding: 0.25rem 1rem;
  margin: 0 4px;
  @include transition-property(transform);
  // @include transition-duration(0.1s);
  // @include transition-timing-function(ease-in-out);
  // @include transition-delay(0s);

  &:hover,
  &:focus,
  &:active {
      @include transform(scale(1.1));
  }
}

.badge { @include badge(); }

// Give each tag a different color (up to 8 colors, then repeats start)
<% blog.tags.to_enum.with_index(1).each do |obj, idx| %>
    .badge[href*="<%= obj[0] %>"], .grid-item[href*="<%= obj[0] %>"] {
        $i: <%= idx %>;
        @if $i > length($rainbow-list) {
          // More tags than colors, so start over on colors
          $i: $i - length($rainbow-list);
        }
        $current-color: nth($rainbow-list, $i);
        background-color: $current-color;
    }

    // Check if any tags in Projects not in Articles
    <% data.projects.each do |slug, project| %>
      // If project has any tags
      <% if project.tags? %>
        // Iterate over them
        <% project.tags.each do |tag| %>
          // If tag not one of the blog-tags
          <% if !blog.tags.include?(tag) %>
            // style that tag's class
            #<%= tag %> {
                background-color: $dark;
            }
          <% end %>
        <% end %>
      <% end %>

    <% end %>
<% end %>